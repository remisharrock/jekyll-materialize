<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rémi Sharrock academic page</title>
    <link>https://remisharrock.fr/</link>
      <atom:link href="https://remisharrock.fr/index.xml" rel="self" type="application/rss+xml" />
    <description>Rémi Sharrock academic page</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Tue, 28 Apr 2020 16:50:34 +0200</lastBuildDate>
    <image>
      <url>https://remisharrock.fr/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Rémi Sharrock academic page</title>
      <link>https://remisharrock.fr/</link>
    </image>
    
    <item>
      <title>Etape 1</title>
      <link>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape1/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape1/</guid>
      <description>&lt;h2 id=&#34;faire-un-programme-séquentiel-non-parallélisé-qui-compte-le-nombre-doccurrences-des-mots-dans-un-fichier&#34;&gt;Faire un programme séquentiel non parallélisé qui compte le nombre d&#39;occurrences des mots dans un fichier.&lt;/h2&gt;
&lt;h3 id=&#34;prérequis-et-documentation&#34;&gt;Prérequis et documentation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;programmer en Java&lt;br&gt;
&lt;a href=&#34;https://perso.telecom-paristech.fr/bellot/CoursJava/&#34;&gt;https://perso.telecom-paristech.fr/bellot/CoursJava/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;manipuler l&amp;rsquo;environnement de développement Eclipse&lt;br&gt;
&lt;a href=&#34;https://perso.telecom-paristech.fr/bellot/CoursJava/tps/&#34;&gt;https://perso.telecom-paristech.fr/bellot/CoursJava/tps/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;lire et écrire dans un fichier en java&lt;br&gt;
&lt;a href=&#34;https://perso.telecom-paristech.fr/bellot/CoursJava/JavaIO.html&#34;&gt;https://perso.telecom-paristech.fr/bellot/CoursJava/JavaIO.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;premier-comptage-en-séquentiel-pur&#34;&gt;Premier comptage en séquentiel pur&lt;/h3&gt;
&lt;p&gt;Implémentez un logiciel en java qui compte le nombre d&amp;rsquo;occurrences des mots d&amp;rsquo;un fichier d&amp;rsquo;entrée de manière non parallélisée (monothread, une seul thread), en utilisant un seul processeur.&lt;/p&gt;
&lt;p&gt;Quelle structure de donnée est la plus pertinente pour stocker les résultats: List, HashMap ou HashSet ou une autre ? Pour quelle raison ?&lt;/p&gt;
&lt;p&gt;Testez votre programme avec un fichier d&amp;rsquo;entrée &lt;em&gt;input.txt&lt;/em&gt; avec comme contenu:&lt;br&gt;
&lt;br&gt;
Deer Beer River&lt;br&gt;
Car Car River&lt;br&gt;
Deer Car Beer&lt;/p&gt;
&lt;p&gt;Résultat:&lt;/p&gt;
&lt;p&gt;Deer 2&lt;/p&gt;
&lt;p&gt;Beer 2&lt;/p&gt;
&lt;p&gt;River 2&lt;/p&gt;
&lt;p&gt;Car 3&lt;/p&gt;
&lt;h3 id=&#34;premier-tri-en-séquentiel-pur&#34;&gt;Premier tri en séquentiel pur&lt;/h3&gt;
&lt;p&gt;Modifiez votre programme pour trier par nombre d&#39;occurrences:&lt;/p&gt;
&lt;p&gt;Résultat:&lt;/p&gt;
&lt;p&gt;Car 3&lt;/p&gt;
&lt;p&gt;Deer 2&lt;/p&gt;
&lt;p&gt;Beer 2&lt;/p&gt;
&lt;p&gt;River 2&lt;/p&gt;
&lt;h3 id=&#34;deuxième-tri-alphabétique-en-séquentiel-pur&#34;&gt;Deuxième tri alphabétique en séquentiel pur&lt;/h3&gt;
&lt;p&gt;Modifiez le programme pour trier alphabétiquement pour les mots à égalité du nombre d&amp;rsquo;occurrences:&lt;/p&gt;
&lt;p&gt;Résultat:&lt;/p&gt;
&lt;p&gt;Car 3&lt;/p&gt;
&lt;p&gt;Beer 2&lt;/p&gt;
&lt;p&gt;Deer 2&lt;/p&gt;
&lt;p&gt;River 2&lt;/p&gt;
&lt;h3 id=&#34;test-du-programme-séquentiel-sur-le-code-forestier-de-mayotte&#34;&gt;Test du programme séquentiel sur le code forestier de Mayotte&lt;/h3&gt;
&lt;p&gt;Testez ensuite votre programme avec le code forestier de Mayotte disponible sur github &lt;em&gt;forestier_mayotte.txt&lt;/em&gt; :&lt;br&gt;
&lt;a href=&#34;https://github.com/legifrance/Les-codes-en-vigueur&#34;&gt;https://github.com/legifrance/Les-codes-en-vigueur&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Votre programme a-t-il fonctionné du premier coup ?&lt;/p&gt;
&lt;p&gt;Vérifiez en ouvrant le fichier texte qu&amp;rsquo;il contient bien du texte et non du code HTML.&lt;/p&gt;
&lt;p&gt;Ne perdez pas de temps à corriger les éventuelles erreurs dues aux caractères spéciaux ou à des mots suspects ou illisibles (de toutes façons par la suite il y aura du chinois dans le texte). &lt;/p&gt;
&lt;h3 id=&#34;les-50-mots-du-code-de-la-déontologie-de-la-police-nationale&#34;&gt;Les 50 mots du code de la déontologie de la police nationale&lt;/h3&gt;
&lt;p&gt;Testez votre programme avec le code de déontologie de la police nationale disponible sur github &lt;em&gt;deontologie_police_nationale.txt&lt;/em&gt; : &lt;a href=&#34;https://github.com/legifrance/Les-codes-en-vigueur&#34;&gt;https://github.com/legifrance/Les-codes-en-vigueur&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;De même ne perdez pas de temps à filtrer les caractères spéciaux ou autres mots bizarres. Pourquoi ? Car nous travaillerons ensuite sur des textes en chinois, japonais, arabe et d&amp;rsquo;autres langues. Si vous implémentez une étape de filtrage ici en français elle ne servira à rien par la suite. Quels sont les 5 premiers mots (qui ressemblent à des mots) parmi les 50 premiers de la liste triée résultat ? Gardez la réponse pour l&amp;rsquo;intégrer au rapport.&lt;/p&gt;
&lt;h3 id=&#34;les-50-mots-du-code-du-domaine-public-fluvial&#34;&gt;Les 50 mots du code du domaine public fluvial &lt;/h3&gt;
&lt;p&gt;Testez votre programme avec le code du domaine public fluvial &lt;em&gt;domaine_public_fluvial.txt&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Quels sont les 5 premiers mots (qui ressemblent à des mots) parmi les 50 premiers de la liste triée résultat ? Gardez la réponse pour l&amp;rsquo;intégrer au rapport.&lt;/p&gt;
&lt;h3 id=&#34;les-50-mots-du-code-de-la-santé-publique&#34;&gt;Les 50 mots du code de la santé publique&lt;/h3&gt;
&lt;p&gt;Testez votre programme avec le code de la santé publique &lt;em&gt;sante_publique.txt&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Quels sont les 5 premiers mots (qui ressemblent à des mots) parmi les 50 premiers de la liste triée résultat ? Gardez la réponse pour l&amp;rsquo;intégrer au rapport.&lt;/p&gt;
&lt;h3 id=&#34;chronométrage-du-programme-séquentiel&#34;&gt;Chronométrage du programme séquentiel&lt;/h3&gt;
&lt;p&gt;Chronométrer votre programme sur le code de la santé publique.&lt;/p&gt;
&lt;p&gt;Chronométrage possible avec:&lt;br&gt;
long startTime = System.currentTimeMillis();&lt;br&gt;
...&lt;br&gt;
long endTime   = System.currentTimeMillis();&lt;br&gt;
long totalTime = endTime - startTime;&lt;/p&gt;
&lt;p&gt;Combien de temps faut-il pour chacune des étapes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Compter le nombre d&amp;rsquo;occurrences&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tri (par nombre d&#39;occurrences et alphabétique)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gardez la réponse pour l&amp;rsquo;intégrer au rapport.&lt;/p&gt;
&lt;h3 id=&#34;travailler-sur-des-plus-gros-fichiers&#34;&gt;Travailler sur des plus gros fichiers&lt;/h3&gt;
&lt;p&gt;Testez votre programme sur un cas réel: un extrait de toutes les pages internet transformées au format texte brut (format WET). Toutes les pages sur  internet au format texte sont disponibles sur &lt;a href=&#34;http://commoncrawl.org/the-data/get-started/&#34;&gt;http://commoncrawl.org/the-data/get-started/&lt;/a&gt; : chaque mois, environ 3 milliards de pages web, soit 250 To de données sont stockées. Ces données sont disponibles par tranche de moins d&#39;1Go environ, vous travaillerez sur une tranche de 380Mo.&lt;/p&gt;
&lt;p&gt;J&amp;rsquo;ai choisi une tranche en particulier pour avoir une comparaison entre nous (vous pouvez tester sur d&amp;rsquo;autres tranches si vous voulez). Téléchargez cette tranche ici:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://commoncrawl.s3.amazonaws.com/crawl-data/CC-MAIN-2017-13/segments/1490218189495.77/wet/CC-MAIN-20170322212949-00140-ip-10-233-31-227.ec2.internal.warc.wet.gz&#34;&gt;https://commoncrawl.s3.amazonaws.com/crawl-data/CC-MAIN-2017-13/segments/1490218189495.77/wet/CC-MAIN-20170322212949-00140-ip-10-233-31-227.ec2.internal.warc.wet.gz&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Décompressez et obtenez le fichier CC-MAIN-20170322212949-00140-ip-10-233-31-227.ec2.internal.warc.wet &lt;/p&gt;
&lt;p&gt;Il s&amp;rsquo;agit d&amp;rsquo;une tranche contenant un ensemble de sites internet au format texte brut (WET).&lt;/p&gt;
&lt;p&gt;Testez votre programme avec ce fichier en entrée. Chronométrez-le.&lt;/p&gt;
&lt;p&gt;Gardez la réponse pour l&amp;rsquo;intégrer au rapport.&lt;/p&gt;
&lt;p&gt;Si vous avez un erreur du type java.lang.OutOfMemoryError vous devez augmenter la taille mémoire de la machine virtuelle Java. Pour cela, sous Eclipse, suivez ce tutoriel: 
&lt;a href=&#34;http://www.planetofbits.com/eclipse/increase-jvm-heap-size-in-eclipse/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.planetofbits.com/eclipse/increase-jvm-heap-size-in-eclipse/&lt;/a&gt; . Par la suite, en ligne de commande, vous devrez ajouter l&amp;rsquo;option -Xms avec la valeur qui convient pour toutes les commandes java. Par exemple, java -Xms1000m pour avoir 1000Mo de mémoire alloués pour cette commande java.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Etape 2</title>
      <link>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape2/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape2/</guid>
      <description>&lt;h2 id=&#34;travailler-avec-plusieurs-ordinateurs-en-réseau&#34;&gt;Travailler avec plusieurs ordinateurs en réseau.&lt;/h2&gt;
&lt;h3 id=&#34;prérequis-et-documentation&#34;&gt;Prérequis et documentation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;avoir un compte et pouvoir se connecter aux machines de l&amp;rsquo;école (contacter la DSI de l&amp;rsquo;école dans le cas contraire)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;lancer un interpréteur de commande (console linux , shell) pour taper des commandes:&lt;br&gt;

&lt;a href=&#34;https://fr.wikipedia.org/wiki/Interpr%C3%A9teur_de_commandes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fr.wikipedia.org/wiki/Interpréteur_de_commandes&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://fr.wikipedia.org/wiki/Shell_Unix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fr.wikipedia.org/wiki/Shell_Unix&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;connaître quelques commandes de base sous Linux&lt;br&gt;
&lt;a href=&#34;https://fr.wikipedia.org/wiki/Commandes_Unix&#34;&gt;https://fr.wikipedia.org/wiki/Commandes_Unix&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://prod-edx-mktg-edit.edx.org/course/linux-basics-the-command-line-interface&#34;&gt;https://prod-edx-mktg-edit.edx.org/course/linux-basics-the-command-line-interface&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;savoir qu&amp;rsquo;un ordinateur a un nom d&amp;rsquo;hôte (hostname) et plusieurs adresses IP:&lt;br&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Hostname&#34;&gt;https://en.wikipedia.org/wiki/Hostname&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://fr.wikipedia.org/wiki/Adresse_IP&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fr.wikipedia.org/wiki/Adresse_IP&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;savoir qu&amp;rsquo;un ordinateur peut faire partie d&amp;rsquo;un domaine (comme à l&amp;rsquo;école, le domaine enst.fr ou le domaine telecom-paristech.fr )&lt;br&gt;
&lt;a href=&#34;https://fr.wikipedia.org/wiki/Nom_de_domaine&#34;&gt;https://fr.wikipedia.org/wiki/Nom_de_domaine&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;savoir qu&amp;rsquo;un nom peut être transformé en adresse IP (et inversement) par un serveur qui gère le système du nom de domaine (DNS, Domain Name System)&lt;br&gt;
&lt;a href=&#34;https://fr.wikipedia.org/wiki/Domain_Name_System&#34;&gt;https://fr.wikipedia.org/wiki/Domain_Name_System&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;se connecter à distance à un ordinateur avec SSH en ligne de commande&lt;br&gt;
&lt;a href=&#34;https://fr.wikipedia.org/wiki/Secure_Shell&#34;&gt;https://fr.wikipedia.org/wiki/Secure_Shell&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;http://www.commentcamarche.net/faq/74-se-connecter-a-distance-avec-ssh-linux&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.commentcamarche.net/faq/74-se-connecter-a-distance-avec-ssh-linux&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;nom-court-nom-long&#34;&gt;Nom court, nom long&lt;/h3&gt;
&lt;p&gt;Quel est le nom COURT de votre ordinateur (le nom simple sans le domaine) ?   quel est le nom LONG de votre ordinateur (le nom avec le domaine) ? Comment les connaître en ligne de commande ? Sur les ordinateurs de l&amp;rsquo;école, est-il possible d&amp;rsquo;obtenir ces noms autrement qu&amp;rsquo;en ligne de commande ? Ajoutez les réponses à votre rapport.&lt;/p&gt;
&lt;h3 id=&#34;adresse-ip&#34;&gt;Adresse ip&lt;/h3&gt;
&lt;p&gt;Comment connaître les adresses (plusieurs) IP de votre ordinateur en ligne de commande ? Autrement (en passant par un site internet par exemple) ? Ajoutez les réponses à votre rapport.&lt;/p&gt;
&lt;h3 id=&#34;du-nom-vers-lip&#34;&gt;Du nom vers l&amp;rsquo;IP&lt;/h3&gt;
&lt;p&gt;Comment à partir du nom d&amp;rsquo;un ordinateur, obtenir les adresses IP en ligne de commande ? Ajoutez les réponses à votre rapport.&lt;/p&gt;
&lt;h3 id=&#34;de-lip-vers-le-nom&#34;&gt;De l&amp;rsquo;IP vers le nom&lt;/h3&gt;
&lt;p&gt;Comment, à partir d&amp;rsquo;une adresse IP, obtenir les noms associés en ligne de commande ? Ajoutez les réponses à votre rapport.&lt;/p&gt;
&lt;h3 id=&#34;ping-pong-à-lintérieur&#34;&gt;Ping pong à l&amp;rsquo;intérieur!&lt;/h3&gt;
&lt;p&gt;Testez la communication avec d&amp;rsquo;autres ordinateurs (pas le vôtre) depuis le réseau de l&amp;rsquo;école en utilisant la commande ping (pour arrêter le ping faire CTRL + C). suivi du nom court, du nom long, de l&amp;rsquo;IP. Les trois méthodes fonctionnent-elles ? Ajoutez les réponses à votre rapport.&lt;/p&gt;
&lt;h3 id=&#34;ping-pong-à-lextérieur&#34;&gt;Ping pong à l&amp;rsquo;extérieur&lt;/h3&gt;
&lt;p&gt;Si vous effectuez le ping depuis un réseau différent, il est possible que celui ne fonctionne pas (filtrage des accès vers le réseau de l&amp;rsquo;école depuis un réseau extérieur), contactez la DSI pour mettre en place une connection VPN / OpenVPN afin d&amp;rsquo;être sur le même réseau que les machines en salle de TP.&lt;/p&gt;
&lt;h3 id=&#34;calculer-en-ligne-de-commande-sur-lordinateur-local&#34;&gt;Calculer en ligne de commande sur l&amp;rsquo;ordinateur local&lt;/h3&gt;
&lt;p&gt;Comment lancer un calcul en ligne de commande sur votre ordinateur (par exemple 2 + 3) ? Parmi les multiples réponses possibles, lesquelles permettent de lancer le calcul et d&amp;rsquo;obtenir le résultat en appuyant une seule fois sur la touche &amp;lt;Entrée&amp;gt; ? Ajoutez les réponses à votre rapport.&lt;/p&gt;
&lt;h3 id=&#34;calculer-en-ligne-de-commande-sur-un-ordinateur-distant&#34;&gt;Calculer en ligne de commande sur un ordinateur distant&lt;/h3&gt;
&lt;p&gt;Comment lancer un calcul  (par exemple 2 + 3) en ligne de commande sur un autre ordinateur (à distance) ? Il faudra certainement vous authentifier avec un mot de passe. Comment obtenir le résultat du calcul immédiatement après avoir tapé son mot de passe ? Ajoutez les réponses à votre rapport.&lt;/p&gt;
&lt;h3 id=&#34;calculer-à-distance-sans-mot-de-passe&#34;&gt;Calculer à distance sans mot de passe&lt;/h3&gt;
&lt;p&gt;Comment lancer un calcul à distance en utilisant SSH sans taper le mot de passe et en une seule ligne de commande (c&amp;rsquo;est à dire qu&amp;rsquo;on appuie sur &amp;lt;Entrée&amp;gt; et on a le résultat directement)?&lt;/p&gt;
&lt;p&gt;Attention: en utilisant vos ordinateurs personnels( a priori ce n&amp;rsquo;est pas le cas sur les ordinateurs de l&amp;rsquo;école), il faut parfois vérifier le &amp;ldquo;fingerprint&amp;rdquo; avec le message:&lt;/p&gt;
&lt;p&gt;The authenticity of host &#39;mint.phcomp.co.uk (78.32.209.33)&#39; can&#39;t be established.&lt;br&gt;
RSA key fingerprint is 6a🇩🇪e0:af:56:f8:0c:04:11:5b:ef:4d:49:ad:09:23.&lt;br&gt;
Are you sure you want to continue connecting (yes/no)? yes&lt;/p&gt;
&lt;p&gt;Pour ne plus avoir à rentrer quoi que ce soit dans le terminal, il faut donc désactiver la vérification de ce &amp;ldquo;fingerprint&amp;rdquo;, sinon vous aurez l&amp;rsquo;erreur &lt;/p&gt;
&lt;p&gt;Host key verification failed&lt;/p&gt;
&lt;p&gt;Suivez ce guide pour désactiver la vérification de &amp;ldquo;fingerprint&amp;rdquo;:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.shellhacks.com/disable-ssh-host-key-checking/&#34;&gt;https://www.shellhacks.com/disable-ssh-host-key-checking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;De plus, si vous travaillez depuis votre ordinateur personnel, pour ne pas avoir à taper le mot de passe à chaque fois, il faut générer une clé privée et une clé publique SANS PASSPHRASE (ne pas mettre de mot de passe lors de la génération des clés) et installer la clé publique sur un ordinateur de l&amp;rsquo;école, en copiant le contenu de la clé publique dans le fichier authorized_keys. Ce fichier authorized_keys est a placer dans le dossier .ssh (attention, il y a un point devant ssh &amp;ldquo;.ssh&amp;rdquo;), lui même situé dans votre dossier personnel sur les machines de l&amp;rsquo;école. Pour cela, suivez un guide sur internet de création de clés publiques privées pour SSH. Attention, votre clé privée doit également être située dans le dossier .ssh de votre ordinateur personnel. La bonne configuration est donc: avoir une clé privée sur l&amp;rsquo;ordinateur personnel dans le dossier .ssh de votre ordinateur personnel et avoir une clé publique sur un ordinateur de l&amp;rsquo;école dans le dossier .ssh d&amp;rsquo;un ordinateur de l&amp;rsquo;école. Attention: sur Windows, il est parfois compliqué de créer le dossier .ssh. Sur Windows, il est également compliqué de générer des clés avec puttygen car le format des clés n&amp;rsquo;est pas compatible avec openssh utilisé à l&amp;rsquo;école. Puttygen a une option de conversion du format des clés (dans le menu conversions) pour convertir vers le fomat openssh. Le plus simple est de générer les clés sur une machine de l&amp;rsquo;école puis de copier la clé privée sur votre ordinateur perso plutôt que de générer la clé sur votre ordi perso... Demandez de l&amp;rsquo;aide à vos confrères experts en cas de pb. Ne restez pas coincé longtemps sur cette étape!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Etape 3</title>
      <link>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape3/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape3/</guid>
      <description>&lt;h2 id=&#34;travailler-avec-des-fichiers-locaux-ou-sur-un-serveur-nfs&#34;&gt;Travailler avec des fichiers locaux ou sur un serveur NFS.&lt;/h2&gt;
&lt;h3 id=&#34;prérequis-et-documentation&#34;&gt;Prérequis et documentation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;pouvoir transférer un fichier d&amp;rsquo;un ordinateur à un autre en utilisant la commande SCP (Secure Copy): &lt;a href=&#34;https://fr.wikipedia.org/wiki/Secure_copy&#34;&gt;https://fr.wikipedia.org/wiki/Secure_copy&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;connaître l&amp;rsquo;architecture d&amp;rsquo;un système de fichier NFS (Network File System) : &lt;a href=&#34;https://fr.wikipedia.org/wiki/Network_File_System&#34;&gt;https://fr.wikipedia.org/wiki/Network_File_System&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;chemin-absolu&#34;&gt;Chemin absolu&lt;/h3&gt;
&lt;p&gt;Quel est le chemin absolu de votre répertoire personnel, votre &lt;em&gt;home directory&lt;/em&gt; ? (commandes &amp;ldquo;cd&amp;rdquo; puis &amp;ldquo;pwd&amp;rdquo;)&lt;/p&gt;
&lt;h3 id=&#34;un-fichier-dans-le-répertoire-personnel&#34;&gt;Un fichier dans le répertoire personnel&lt;/h3&gt;
&lt;p&gt;Créez un fichier fperso.txt contenant le texte &amp;ldquo;bonjour&amp;rdquo; dans votre répertoire personnel (sur un ordinateur de l&amp;rsquo;école). &lt;/p&gt;
&lt;p&gt;Vérifiez le contenu du fichier avec cette commande exactement:&lt;/p&gt;
&lt;p&gt;cat ~/fperso.txt&lt;/p&gt;
&lt;h3 id=&#34;ou-se-trouve-le-fichier-dans-le-répertoire-personnel&#34;&gt;Ou se trouve le fichier dans le répertoire personnel&lt;/h3&gt;
&lt;p&gt;Ce fichier est-il sur le disque dur de l&amp;rsquo;ordinateur ou autre part ? Comment savoir où est stocké physiquement ce fichier, à l&amp;rsquo;aide de quelle commande ? &lt;/p&gt;
&lt;h3 id=&#34;un-dossier-et-un-fichier-dans-le-répertoire-temporaire&#34;&gt;Un dossier et un fichier dans le répertoire temporaire&lt;/h3&gt;
&lt;p&gt;Créez un dossier /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt; en remplaçant &amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt; (ne pas mettre les caractères &amp;lt; et &amp;gt; ).&lt;/p&gt;
&lt;p&gt;Créez un fichier ftemp.txt dans le répertoire /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt; .&lt;/p&gt;
&lt;p&gt;Vérifiez le contenu du fichier avec cette commande &lt;strong&gt;exactement&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;cat /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/ftemp.txt&lt;/p&gt;
&lt;p&gt;Ce dossier et ce fichier sont-ils sur le disque dur de l&amp;rsquo;ordinateur ou autre part ? Comment savoir où sont stockés physiquement ces éléments, à l&amp;rsquo;aide de quelle commande ?&lt;/p&gt;
&lt;h3 id=&#34;trois-ordinateurs-a-b-c-on-commence-avec-a-utilisation-du-serveur-nfs&#34;&gt;Trois ordinateurs A B C. On commence avec A. Utilisation du serveur NFS.&lt;/h3&gt;
&lt;p&gt;Pour les questions suivantes, utilisez trois ordinateurs: A, B C.&lt;/p&gt;
&lt;p&gt;Connectez vous physiquement (avec un clavier, une souris et un écran) sur l&amp;rsquo;ordinateur A.&lt;/p&gt;
&lt;p&gt;Sur A, créez un fichier text.txt contenant le texte &amp;ldquo;mon texte sur NFS&amp;rdquo; dans votre répertoire personnel.&lt;/p&gt;
&lt;p&gt;Vérifiez que le fichier existe et vérifiez son contenu. Pour cela, sur A, utilisez la commande :&lt;/p&gt;
&lt;p&gt;cat ~/text.txt&lt;/p&gt;
&lt;h3 id=&#34;trois-ordinateurs-a-b-c-on-continue-sur-b-et-sur-c-utilisation-du-serveur-nfs&#34;&gt;Trois ordinateurs A B C. On continue sur B et sur C. Utilisation du serveur NFS.&lt;/h3&gt;
&lt;p&gt;Connectez-vous à B (physiquement ou à distance) et vérifiez que le fichier text.txt est également présent dans votre répertoire personnel. Pour cela, sur B, utilisez la commande :&lt;/p&gt;
&lt;p&gt;cat ~/text.txt&lt;/p&gt;
&lt;p&gt;De même, connectez-vous à C et vérifiez que text.txt est aussi présent.&lt;/p&gt;
&lt;p&gt;Remarquez que vous n&amp;rsquo;avez pas copié le fichier mais qu&amp;rsquo;il est présent sur A, B et C grâce au serveur NFS.&lt;/p&gt;
&lt;h3 id=&#34;trois-ordinateurs-a-b-c-on-commence-avec-a-utilisation-des-disques-locaux&#34;&gt;Trois ordinateurs A B C. On commence avec A. Utilisation des disques locaux.&lt;/h3&gt;
&lt;p&gt;Déconnectez vous de B et de C et revenez sur l&amp;rsquo;ordinateur A.&lt;/p&gt;
&lt;p&gt;Sur A, créez un dossier /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt; et un fichier local.txt contenant le texte &amp;ldquo;mon texte sur disque local&amp;rdquo; dans ce dossier /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;.&lt;/p&gt;
&lt;p&gt;Vérifiez que le fichier existe et vérifiez son contenu. Pour cela, sur A, utilisez la commande :&lt;/p&gt;
&lt;p&gt;cat /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/local.txt&lt;/p&gt;
&lt;h3 id=&#34;trois-ordinateurs-a-b-c-on-continue-sur-b-et-sur-c-utilisation-des-disques-locaux&#34;&gt;Trois ordinateurs A B C. On continue sur B et sur C. Utilisation des disques locaux.&lt;/h3&gt;
&lt;p&gt;Connectez-vous à B et C (physiquement ou à distance) et vérifiez que le dossier &amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt; ainsi que le fichier local.txt &lt;strong&gt;ne sont pas&lt;/strong&gt; présent dans /tmp . Pour cela vérifiez avec la commande:&lt;/p&gt;
&lt;p&gt;ls /tmp&lt;/p&gt;
&lt;h3 id=&#34;depuis-a-copier-de-a-vers-b-avec-les-disques-locaux&#34;&gt;Depuis A, copier de A vers B avec les disques locaux.&lt;/h3&gt;
&lt;p&gt;Comment, &lt;strong&gt;à partir de A&lt;/strong&gt;, transférer le fichier /tmp/local.txt &lt;strong&gt;sur B&lt;/strong&gt; (dans /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/local.txt) en utilisant scp ? Vérifiez que le fichier est bien présent sur B. Attention: si vous avez une erreur &amp;ldquo;no such file or directory&amp;rdquo; (ou l&amp;rsquo;équivalent français), vous devez d&amp;rsquo;abord créer le répertoire /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/ avec la commande mkdir -p associée à un ssh pour l&amp;rsquo;ordinateur distant.&lt;/p&gt;
&lt;h3 id=&#34;depuis-a-copier-de-b-vers-c-avec-les-disques-locaux&#34;&gt;Depuis A, copier de B vers C avec les disques locaux.&lt;/h3&gt;
&lt;p&gt;Comment, &lt;strong&gt;à partir de A&lt;/strong&gt;, transférer le fichier &lt;strong&gt;de B&lt;/strong&gt; (depuis /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/local.txt) &lt;strong&gt;vers C&lt;/strong&gt; (dans /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/local.txt) ? Vérifiez que le fichier est bien présent sur C. De même que la question précédentes, vous devez créer les répertoires /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/ correspondants.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Etape 4</title>
      <link>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape4/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape4/</guid>
      <description>&lt;h2 id=&#34;lancer-des-programmes-java-à-distance-manuellement&#34;&gt;Lancer des programmes java à distance manuellement.&lt;/h2&gt;
&lt;h3 id=&#34;prérequis-et-documentation&#34;&gt;Prérequis et documentation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;exporter un .JAR exécutable (Runnable JAR File)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;utiliser les packages et savoir lancer un programme Java en ligne de commande&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;un-premier-programme-slave-sous-eclipse&#34;&gt;Un premier programme SLAVE sous Eclipse&lt;/h3&gt;
&lt;p&gt;Faire un programme Java nommé &amp;ldquo;SLAVE&amp;rdquo; qui calcule 3+5, affiche le résultat, sous Eclipse (Pour lancer Eclipse: Menu applications&amp;gt;développement), lancer ce programme dans Eclipse (flèche verte &amp;ldquo;exécuter&amp;rdquo;)&lt;/p&gt;
&lt;h3 id=&#34;exportation-en-jar&#34;&gt;Exportation en JAR&lt;/h3&gt;
&lt;p&gt;Exporter le programme Java en slave.jar exécutable (Java ARchive dite Runnable) sous Eclipse. Attention de bien vérifier que le JAR est de type &amp;ldquo;Runnable&amp;rdquo;/&amp;ldquo;exécutable&amp;rdquo;.&lt;/p&gt;
&lt;h3 id=&#34;exécution-sur-disque-dur-local&#34;&gt;Exécution sur disque dur local&lt;/h3&gt;
&lt;p&gt;Créez le répertoire /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/&lt;/p&gt;
&lt;p&gt;Copiez  slave.jar exécutable dans le répertoire /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/&lt;/p&gt;
&lt;p&gt;Testez et Lancer le slave.jar en ligne de commande sur votre ordinateur local.&lt;/p&gt;
&lt;h3 id=&#34;copie-du-jar-et-exécution-distante&#34;&gt;Copie du JAR et exécution distante&lt;/h3&gt;
&lt;p&gt;Depuis la machine A contenant /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/slave.jar &lt;/p&gt;
&lt;p&gt;Créez à distance sur la machine B (s&amp;rsquo;il n&amp;rsquo;existe pas) un répertoire /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/&lt;/p&gt;
&lt;p&gt;Copiez slave.jar sur la machine B dans le répertoire /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/&lt;/p&gt;
&lt;p&gt;Exécutez à distance (depuis A sur la machine B) le slave.jar.&lt;/p&gt;
&lt;p&gt;Quelle est la commande tapée pour effectuer cette dernière action ?&lt;/p&gt;
&lt;p&gt;Attention: si le JAR est créé sur votre machine personnelle, vous risquez de produire un JAR avec une version supérieure de JAVA que celle installée sur les ordinateurs de l&amp;rsquo;école. Pour remédier à ce problème, configurez votre projet JAVA pour qu&amp;rsquo;il soit compatible avec la version 1.8 de JAVA. Sous Eclipse, dans les propriétés de votre projet, allez dans Java Compiler et décochez la case &amp;ldquo;Use compliance from execution environment XXXX&amp;rdquo; et puis dans le menu déroulant choisissez 1.8. Vous devrez re-générer le JAR pour obtenir un JAR compatible avec la version 1.8 de Java.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Etape 5</title>
      <link>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape5/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape5/</guid>
      <description>&lt;h2 id=&#34;lancer-des-programmes-en-ligne-de-commande-depuis-java-et-afficher-la-sortie-standard-et-la-sortie-derreur&#34;&gt;Lancer des programmes en ligne de commande depuis java et afficher la sortie standard et la sortie d&amp;rsquo;erreur.&lt;/h2&gt;
&lt;h3 id=&#34;prérequis-et-documentation&#34;&gt;Prérequis et documentation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;utiliser le processBuilder en java&lt;br&gt;
&lt;a href=&#34;http://docs.oracle.com/javase/7/docs/api/java/lang/ProcessBuilder.html&#34;&gt;http://docs.oracle.com/javase/7/docs/api/java/lang/ProcessBuilder.html&lt;/a&gt; .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;lancer un exécutable (ou une commande) en ligne de commande depuis un programme écrit en java&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;connaître les sorties standard et les sorties d&amp;rsquo;erreurs&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;un-programme-master-java-qui-lance-un-autre-programme-en-ligne-de-commande&#34;&gt;Un programme MASTER java qui lance un autre programme en ligne de commande!&lt;/h3&gt;
&lt;p&gt;Ecrire un programme java nommé &amp;ldquo;MASTER&amp;rdquo; qui lance la commande suivante en utilisant ProcessBuilder:&lt;/p&gt;
&lt;p&gt;ls -al /tmp&lt;/p&gt;
&lt;p&gt;(vous pouvez aussi tester cette commande dans un terminal avant)&lt;/p&gt;
&lt;p&gt;Récupérer et afficher la sortie de cette commande.&lt;/p&gt;
&lt;p&gt;Vous devez utiliser ProcessBuilder de cette façon:&lt;/p&gt;
&lt;p&gt;ProcessBuilder pb = new ProcessBuilder(&amp;quot;ls&amp;quot;, &amp;ldquo;-al&amp;rdquo;, &amp;ldquo;/tmp&amp;rdquo;);&lt;/p&gt;
&lt;h3 id=&#34;un-programme-master-java-qui-gère-les-erreurs-de-lancement-dun-autre-programme-en-ligne-de-commande&#34;&gt;Un programme MASTER java qui gère les erreurs de lancement d&amp;rsquo;un autre programme en ligne de commande.&lt;/h3&gt;
&lt;p&gt;Modifiez votre programme&amp;quot;MASTER&amp;rdquo; pour qu&amp;rsquo;il affiche la sortie d&amp;rsquo;erreur en cas d&amp;rsquo;erreur lors de l&amp;rsquo;exécution de la commande. Testez la sortie d&amp;rsquo;erreur avec une commande qui échoue avec un sortie d&amp;rsquo;erreur. Essayez par exemple d&amp;rsquo;exécuter la commande &amp;ldquo;ls /jesuisunhero&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Explications: si on tape la commande &amp;ldquo;ls /jesuiunhero&amp;rdquo;, le dossier /jesuisunhero n&amp;rsquo;existant pas, on aura une erreur de type &amp;ldquo;impossible d&amp;rsquo;accéder à /jesuisunhero: aucun fichier ou dossier de ce type.&amp;rdquo; qui s&amp;rsquo;affiche dans la sortie d&amp;rsquo;erreur. En effet, il y a deux sorties: les sorties standards (sans erreur) et les sorties d&amp;rsquo;erreurs.&lt;/p&gt;
&lt;p&gt;Vous devez utiliser ProcessBuilder de cette façon:&lt;/p&gt;
&lt;p&gt;ProcessBuilder pb = new ProcessBuilder(&amp;quot;ls&amp;quot;, &amp;quot;/jesuisunhero&amp;rdquo;);&lt;/p&gt;
&lt;p&gt;Sur pb, vous pouvez récupérer le flux de la sortie standard et le flux de la sortie d&amp;rsquo;erreur.&lt;/p&gt;
&lt;h3 id=&#34;un-programme-master-java-qui-lance-un-slavejar-en-ligne-de-commande&#34;&gt;Un programme MASTER java qui lance un slave.jar en ligne de commande.&lt;/h3&gt;
&lt;p&gt;Modifiez votre programme &amp;ldquo;MASTER&amp;rdquo; pour qu&amp;rsquo;il lance &amp;ldquo;SLAVE&amp;rdquo;, c&amp;rsquo;est à dire slave.jar situé sur la même machine que &amp;ldquo;MASTER&amp;rdquo; dans le dossier&lt;br&gt;
/tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/slave.jar&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Etape 6</title>
      <link>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape6/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape6/</guid>
      <description>&lt;h2 id=&#34;gérer-les-timeout-du-master&#34;&gt;Gérer les timeout du MASTER.&lt;/h2&gt;
&lt;h3 id=&#34;un-slave-qui-simule-un-calcul-de-10-secondes&#34;&gt;Un SLAVE qui simule un calcul de 10 secondes.&lt;/h3&gt;
&lt;p&gt;Modifiez votre programme SLAVE pour qu&amp;rsquo;il simule une attente de 10 secondes avant d&amp;rsquo;afficher le résultat du calcul 3+5. Pour cela utilisez&lt;/p&gt;
&lt;p&gt;Thread.sleep(10000); &lt;/p&gt;
&lt;p&gt;Vérifiez le bon fonctionnement du SLAVE et constatez qu&amp;rsquo;il y a 10 secondes entre le démarrage du SLAVE et l&amp;rsquo;affichage du résultat. Attention de ne rien afficher avant les 10 secondes pour que la question suivante fonctionne correctement.&lt;/p&gt;
&lt;p&gt;Générez de nouveau le slave.jar. Copiez-le en écrasant le slave.jar dans le dossier&lt;br&gt;
/tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/slave.jar&lt;/p&gt;
&lt;p&gt;Testez le lancement à partir de MASTER.&lt;/p&gt;
&lt;h3 id=&#34;gérer-les-timeout-au-niveau-du-master&#34;&gt;Gérer les timeout au niveau du MASTER.&lt;/h3&gt;
&lt;p&gt;Modifier le MASTER pour qu&amp;rsquo;il attende que quelque chose soit écrit dans la sortie standard (sans erreur) ou dans la sortie d&amp;rsquo;erreurs du SLAVE pendant un certain temps maximum. Au bout du temps imparti le MASTER considère un timeout.&lt;/p&gt;
&lt;p&gt;Il arrête les éventuels threads (si vous utilisez des threads - non obligatoire) s&amp;rsquo;occupant des sorties et/ou stoppe le processus créé avec ProcessBuilder.&lt;/p&gt;
&lt;p&gt;Vous avez la solution ci-dessous pour implémenter les TESTs suivants:&lt;/p&gt;
&lt;h3 id=&#34;test1---calcul-10-secondes-et-timetout-2-secondes&#34;&gt;TEST1 :  calcul 10 secondes et timetout 2 secondes&lt;/h3&gt;
&lt;p&gt;Testez le bon fonctionnement du timeout en lançant le SLAVE avec un timeout de 2 secondes sur les sorties (standard et d&amp;rsquo;erreur). Le timeout étant plus court (au niveau du MASTER 2 secondes) que le temps de calcul du SLAVE (10 secondes), le MASTER doit arrêter les éventuels threads (si vous en utilisez) et le processus.&lt;/p&gt;
&lt;h3 id=&#34;test-2-calcul-10-secondes-et-timeout-15-secondes&#34;&gt;TEST 2: calcul 10 secondes et timeout 15 secondes&lt;/h3&gt;
&lt;p&gt;Testez ensuite avec un timeout de 15 secondes, il ne devrait pas y avoir de timeout.&lt;/p&gt;
&lt;h3 id=&#34;test-3-sortie-derreur&#34;&gt;TEST 3: sortie d&amp;rsquo;erreur&lt;/h3&gt;
&lt;p&gt;Testez ensuite en changeant le SLAVE pour qu&amp;rsquo;il écrive non plus dans la sortie standard (sans erreur) mais dans la sortie d&amp;rsquo;erreur. Pour cela, remplacez dans le Slave les &lt;em&gt;System.out.print&lt;/em&gt;&amp;hellip; par &lt;em&gt;System.err.print&lt;/em&gt;&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;solution-1-très-difficile&#34;&gt;SOLUTION 1 (très difficile)&lt;/h3&gt;
&lt;p&gt;passez à la SOLUTION 2 si vous êtes débutant&lt;/p&gt;
&lt;p&gt;Vous utilisez deux threads (processus légers) pour chaque processus lourd (lancé avec ProcessBuilder). Un thread s&amp;rsquo;occupe de lire la sortie standard et l&amp;rsquo;autre la sortie d&amp;rsquo;erreur. Une solution pour gérer les timeout consiste à utiliser une structure &lt;em&gt;ArrayBlockingQueue&lt;/em&gt; (taille fixe) ou &lt;em&gt;LinkedBlockingQueue&lt;/em&gt; (taille dynamique) donnée en paramètre de chaque thread s&amp;rsquo;occupant de lire la sortie standard (sans erreur) ou la sortie d&amp;rsquo;erreur. Chaque thread va écrire ce qui est lu depuis les sorties dans cette structure en utilisant la méthode &lt;em&gt;put&lt;/em&gt;. Le timeout de 2 secondes peut alors être paramétré lors de la récupération des éléments insérés dans la structure en utilisant la méthode &lt;em&gt;poll&lt;/em&gt; sur l&amp;rsquo;&lt;em&gt;ArrayBlockingQueue&lt;/em&gt; ou la &lt;em&gt;LinkedBlockingQueue&lt;/em&gt; de cette manière:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;poll(2, TimeUnit.SECONDS);&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;solution-2-très-facile&#34;&gt;SOLUTION 2 (très facile)&lt;/h3&gt;
&lt;p&gt;La solution 3 est facile si vous voulez voir.&lt;/p&gt;
&lt;p&gt;Une solution consiste à:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;rediriger la sortie d&amp;rsquo;erreur dans la sortie standard à l&amp;rsquo;aide de la méthode pb.redirectErrorStream(true) du ProcessBuilder&lt;/li&gt;
&lt;li&gt;utiliser &lt;em&gt;pb.inheritIO();&lt;/em&gt; pour rediriger les sorties du process dans le MASTER (c&amp;rsquo;est à dire que le MASTER va afficher les sorties du SLAVE). Attention pb.inheritIO() doit être appelé AVANT pb.start();&lt;/li&gt;
&lt;li&gt;démarrer le process avec Process p = pb.start();&lt;/li&gt;
&lt;li&gt;attendre la fin du process avec un waitFor sur le process qui génère un timeout en utilisant &lt;em&gt;boolean b = p.waitFor(3, TimeUnit.SECONDS); //si b vaut false il y a un timeout&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;s&amp;rsquo;il y a un timeout vous devez détruire le process avec p.destroy();&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Attention: dans cette solution et l&amp;rsquo;utilisation de inheritIO() , vous ne pourrez plus récupérer et/ou traiter la sortie standard ou la sortie d&amp;rsquo;erreur du process: par exemple, p.getInputStream() renverra un flux vide et p.getErrorStream() renverra aussi un flux vide.&lt;/p&gt;
&lt;h3 id=&#34;solution-3-facile-&#34;&gt;SOLUTION 3 (facile )&lt;/h3&gt;
&lt;p&gt;Il s&amp;rsquo;agit d&amp;rsquo;utiliser pb.redirectErrorStream(true) et une boucle pour lire les lignes reçues depuis p.getInputStream() sans utiliser inheritIO()&lt;/p&gt;
&lt;h3 id=&#34;solution-4-moins-facile-&#34;&gt;SOLUTION 4 (moins facile )&lt;/h3&gt;
&lt;p&gt;il s&amp;rsquo;agit d&amp;rsquo;utiliser deux boucles pour lire les lignes reçues depuis p.getInputStream() et p.getErrorStream() sans utiliser inheritIO()&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Etape 7</title>
      <link>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape7/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape7/</guid>
      <description>&lt;h2 id=&#34;déployer-automatiquement-le-programme-slave-sur-un-ensemble-de-machines&#34;&gt;Déployer automatiquement le programme SLAVE sur un ensemble de machines.&lt;/h2&gt;
&lt;h3 id=&#34;un-programme-deploy--test-de-connection-ssh-multiple&#34;&gt;Un programme DEPLOY : Test de connection SSH multiple&lt;/h3&gt;
&lt;p&gt;Créer un fichier texte à la main contenant : les adresses IP et/ou les noms des machines que nous voulons utiliser pour notre système réparti (par exemple toutes les machines de cette salle de TP), avec un nom ou une IP par ligne dans le fichier.&lt;/p&gt;
&lt;p&gt;Créer un &lt;strong&gt;nouveau&lt;/strong&gt; programme java DEPLOY qui lit ce fichier ligne par ligne et teste si la connection SSH fonctionne bien sur chacune des machines. Attention, il s&amp;rsquo;agit bien d&amp;rsquo;un &lt;strong&gt;nouveau programme&lt;/strong&gt; qui est séparé de MASTER ou SLAVE, &lt;strong&gt;vous ne l&amp;rsquo;exécuterez qu&amp;rsquo;en cas de mise à jour du SLAVE&lt;/strong&gt;. Ceci permet de vérifier qu&amp;rsquo;une machine n&amp;rsquo;est pas éteinte ou qu&amp;rsquo;il y a un problème de connection (par exemple).&lt;/p&gt;
&lt;p&gt;Pour vérifier que la connection fonctionne bien, vous pouvez faire afficher le nom de la machine distante (en exécutant la commande hostname à distance) et vérifier que l&amp;rsquo;affichage a effectivement lieu, sans erreurs. Réutilisez des parties de codes de la cinquième étape.&lt;/p&gt;
&lt;p&gt;Votre programme DEPLOY lance-t-il les connections de manière séquentielle (les unes après les autres) ou de manière parallèle?&lt;/p&gt;
&lt;h3 id=&#34;un-programme-deploy--copie-de-slavejar-multiple&#34;&gt;Un programme DEPLOY : copie de slave.jar multiple&lt;/h3&gt;
&lt;p&gt;Modifier votre programme DEPLOY pour qu&amp;rsquo;il copie le slave.jar dans /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/ sur les ordinateurs dont la connection SSH  fonctionne.&lt;/p&gt;
&lt;p&gt;Pour cela, vous devez utiliser la commande mkdir -p pour créer les répertoires dans /tmp s&amp;rsquo;ils n&amp;rsquo;existent pas déjà, &lt;strong&gt;attendre que le mkdir se termine&lt;/strong&gt; puis copier avec scp le fichier slave.jar. &lt;strong&gt;Comment faites-vous pour attendre que le mkdir se termine correctement?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Vérifiez ensuite manuellement que le fichier a bien été copié sur les ordinateurs distants.&lt;/p&gt;
&lt;p&gt;Attention de bien attendre la fin du mkdir avant de lancer le scp (on ne veut pas avoir de copie avant que le dossier soit effectivement créé).&lt;/p&gt;
&lt;p&gt;Lors des copies, faites attention au caractère &amp;quot; / &amp;quot; à la fin d&amp;rsquo;un chemin :&lt;/p&gt;
&lt;p&gt; /tmp/toto est un chemin vers un fichier nommé toto&lt;/p&gt;
&lt;p&gt;/tmp/toto/ est un chemin vers un dossier nommé toto.&lt;/p&gt;
&lt;p&gt;Votre programme DEPLOY lance-t-il les copies de manière séquentielle (les unes après les autres) ou de manière parallèle?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Etape 8</title>
      <link>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape8/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape8/</guid>
      <description>&lt;h2 id=&#34;nettoyer-un-ensemble-de-machines-avec-clean&#34;&gt;Nettoyer un ensemble de machines avec CLEAN.&lt;/h2&gt;
&lt;h3 id=&#34;un-programme-clean-qui-nettoie-les-machines-distantes&#34;&gt;Un programme &amp;ldquo;CLEAN&amp;rdquo; qui nettoie les machines distantes.&lt;/h3&gt;
&lt;p&gt;Créez un nouveau programme CLEAN (différent de MASTER, SLAVE ou DEPLOY) qui efface votre dossier /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/sur les ordinateurs dont la connection SSH  fonctionne. Pour cela, vous utiliserez le même fichier texte écrit à la main et utilisé par DEPLOY contenant : les adresses IP et/ou les noms des machines que nous voulons utiliser pour notre système réparti (par exemple toutes les machines de cette salle de TP), avec un nom ou une IP par ligne dans le fichier.&lt;/p&gt;
&lt;p&gt;CLEAN lit ce fichier ligne par ligne et efface sur chacune des machines votre dossier créé dans le dossier temporaire, en lançant la commande à distance rm -rf /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/. Attention de bien attendre la fin de la commande rm -rf pour être sûr que l&amp;rsquo;effacement a bien été effectué.&lt;/p&gt;
&lt;p&gt;Votre programme CLEAN lance-t-il les commande d&amp;rsquo;effacement de manière séquentielle (les unes après les autres) ou de manière parallèle?&lt;/p&gt;
&lt;h3 id=&#34;vérification-du-deploy-et-du-clean&#34;&gt;Vérification du DEPLOY et du CLEAN&lt;/h3&gt;
&lt;p&gt;Vérifiez manuellement que l&amp;rsquo;effacement des dossiers a bien lieu. Ce programme vous permet de nettoyer un ensemble de machines avant de relancer un calcul. A partir de maintenant, vous pouvez déployer votre application en utilisant DEPLOY et vous pouvez nettoyer votre application en utilisant CLEAN. Vérifiez donc que DEPLOY suivi CLEAN fonctionne correctement.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Etape 9</title>
      <link>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape9/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape9/</guid>
      <description>&lt;h2 id=&#34;lancer-le-programme-slave-sur-un-ordinateur-à-distance&#34;&gt;Lancer le programme SLAVE sur un ordinateur à distance.&lt;/h2&gt;
&lt;h3 id=&#34;clean-et-deploy&#34;&gt;CLEAN et DEPLOY&lt;/h3&gt;
&lt;p&gt;Faites un CLEAN. Faites un DEPLOY sur une seule machine (modifier la liste des machines pour n&amp;rsquo;en mettre qu&amp;rsquo;une) . Vous devriez avoir la dernière version de slave.jar déployée sur une seule machine.&lt;/p&gt;
&lt;h3 id=&#34;master-lançant-slave-à-distance&#34;&gt;Master lançant Slave à distance.&lt;/h3&gt;
&lt;p&gt;Modifier votre programme &amp;ldquo;MASTER&amp;rdquo; pour qu&amp;rsquo;il lance à distance le programme &amp;ldquo;SLAVE&amp;rdquo; &lt;strong&gt;déjà déployé avec le programme &amp;ldquo;DEPLOY&amp;rdquo; sur la seule machine distante&lt;/strong&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Etape 10</title>
      <link>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape10/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape10/</guid>
      <description>&lt;h2 id=&#34;mapreduce---split-et-map&#34;&gt;MapReduce - SPLIT et MAP&lt;/h2&gt;
&lt;h3 id=&#34;prérequis-et-documentation-pour-les-questions-suivantes-&#34;&gt;Prérequis et documentation pour les questions suivantes :&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;connaître l&amp;rsquo;
&lt;a href=&#34;https://www.guru99.com/introduction-to-mapreduce.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;architecture de MapReduce&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Connaître la convention des nom des fichiers pour notre TP&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;connaître le vocabulaire: S UM SM RM (Splits, Unsorted Maps, Sorted Maps, Reduced Maps) - voir en cours&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;un-master-qui-déploie-les-splits&#34;&gt;Un MASTER qui déploie les splits&lt;/h3&gt;
&lt;p&gt;Créez trois fichiers correspondants à des &amp;ldquo;splits&amp;rdquo; dans le répertoire temporaire. Dans un premier temps, créez ces fichiers manuellement. &lt;/p&gt;
&lt;p&gt; /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/splits&lt;/p&gt;
&lt;p&gt;S0.txt S1.txt S2.txt.&lt;br&gt;
S0.txt contient:&lt;/p&gt;
&lt;p&gt;Deer Beer River&lt;/p&gt;
&lt;p&gt;S1.txt contient:&lt;/p&gt;
&lt;p&gt;Car Car River&lt;/p&gt;
&lt;p&gt;S2.txt contient:&lt;/p&gt;
&lt;p&gt;Deer Car Beer&lt;/p&gt;
&lt;p&gt;Modifiez votre MASTER pour qu&amp;rsquo;il copie les 3 fichiers de splits dans 3 ordinateurs différents, en ne copiant qu&amp;rsquo;un slip par machine. Par exemple, s&amp;rsquo;il existe 3 machines et 3 splits, la première machine aura le premier split, la deuxième le deuxième etc. Pour cela vous utiliserez le fichier précédemment créé qui contient la liste des machines que vous voulez utiliser pour votre projet.&lt;/p&gt;
&lt;p&gt;Attention, le répertoire /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/splits doit être créé sur les 3 ordinateurs s&amp;rsquo;il n&amp;rsquo;existe pas. Cette création peut se faire de manière automatique (en créant de manière programmatique ces répertoires). Attention de faire attention de bien attendre que la création des dossiers soit bien effectuée avant de lancer la copie des splits. Comment attendez-vous que la création des dossiers soit bien effectuée avant de copier véritablement les fichiers?&lt;br&gt;
De la même manière que le programme DEPLOY, le MASTER va copier ces splits vers 3 ordinateurs dont la connection SSH fonctionne.&lt;/p&gt;
&lt;p&gt;Votre programme MASTER lance-t-il les copies de manière séquentielle (les unes après les autres) ou de manière parallèle?&lt;/p&gt;
&lt;h3 id=&#34;un-slave-qui-fait-la-phase-de-map&#34;&gt;Un SLAVE qui fait la phase de map&lt;/h3&gt;
&lt;p&gt;Modifiez le SLAVE pour qu&amp;rsquo;il calcule un map à partir d&amp;rsquo;un split.&lt;/p&gt;
&lt;p&gt;Pour cela, il prend un mode de fonctionnement en argument: 0 correspond au calcul du map à partir d&amp;rsquo;un split, puis un nom de fichier &amp;ldquo;Sx.txt&amp;rdquo; en entrée depuis le dossier splits et calcule un fichier &amp;ldquo;UMx.txt&amp;rdquo; en sortie dans le dossier maps, avec x variant (ici de 1 à 3). De la même manière que précédemment, le dossier maps doit être créé avant de pouvoir écrire des fichiers dedans. Vous devez attendre que le dossier maps soit créé avant de travailler avec. Comment attendez-vous que le dossier maps soit bien créé avant de travailler avec?&lt;/p&gt;
&lt;p&gt;Le nom du fichier sera donné comme argument args du main:&lt;br&gt;
public static void main (String[] args)&lt;br&gt;
&lt;br&gt;
Testez dans un terminal le slave.jar comme suit:&lt;/p&gt;
&lt;p&gt;cd /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/&lt;br&gt;
java -jar slave.jar 0 /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/splits/S0.txt&lt;br&gt;
&lt;br&gt;
Le fichier /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/maps/UM0.txt doit être créé contenant&lt;br&gt;
Dear 1&lt;br&gt;
Beer 1&lt;br&gt;
River 1&lt;br&gt;
&lt;br&gt;
Testez le fonctionnement de votre SLAVE avec le fichier S1.txt contenant&lt;br&gt;
Car Car River&lt;br&gt;
Testez dans un terminal le JAR comme suit:&lt;/p&gt;
&lt;p&gt;cd /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/&lt;br&gt;
java -jar slave.jar 0 /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/splits/S1.txt&lt;br&gt;
&lt;br&gt;
Le fichier /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/maps/UM1.txt doit être créé contenant&lt;br&gt;
Car 1&lt;br&gt;
Car 1&lt;br&gt;
River 1&lt;/p&gt;
&lt;p&gt;Attention: Comme votre SLAVE est modifié, utilisez le DEPLOY pour déployer la nouvelle version.&lt;/p&gt;
&lt;p&gt;Posez-vous la question: pourquoi retrouvons-nous deux lignes&lt;/p&gt;
&lt;p&gt;Car 1&lt;/p&gt;
&lt;p&gt;Car 1&lt;/p&gt;
&lt;p&gt;Au lieu d&amp;rsquo;une seule ligne&lt;/p&gt;
&lt;p&gt;Car 2&lt;/p&gt;
&lt;p&gt;Un indice: la phase de reduce qui arrivera plus tard, fera une addition des valeurs. Dans ce cas, la &amp;ldquo;fonction&amp;rdquo; de reduce est très simple: c&amp;rsquo;est une grande addition. Imaginez une fonction de reduce beaucoup plus complexe qui effectue un algorithme complexe appliqué sur toutes les valeurs...&lt;/p&gt;
&lt;h3 id=&#34;un-master-qui-lance-les-slave-pour-la-phase-de-map&#34;&gt;Un MASTER qui lance les SLAVE pour la phase de map.&lt;/h3&gt;
&lt;p&gt;Modifiez le MASTER pour qu&amp;rsquo;il lance la phase de map sur plusieurs machines et affiche &amp;ldquo;MAP FINISHED&amp;rdquo;. Pour cela vous utiliserez le fichier précédemment créé qui contient la liste des machines que vous voulez utiliser pour votre projet.&lt;/p&gt;
&lt;p&gt;Pour bien synchroniser le MASTER avec les SLAVES, veillez à afficher &amp;ldquo;MAP FINISHED&amp;rdquo; qu&amp;rsquo;une fois tous les SLAVEs terminés et uniquement quand tous les SLAVEs sont terminés, PAS AVANT! Le MASTER doit donc attendre que SLAVEs se terminent correctement.&lt;/p&gt;
&lt;p&gt;Comment faites-vous pour qu&amp;rsquo;un process lancé avec ProcessBuilder en Java attende la fin de l&amp;rsquo;exécution du processus ?&lt;/p&gt;
&lt;p&gt;Votre programme MASTER lance-t-il les SLAVE de manière séquentielle (les uns après les autres) ou de manière parallèle?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Etape 11</title>
      <link>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape11/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape11/</guid>
      <description>&lt;h2 id=&#34;mapreduce---shuffle&#34;&gt;MapReduce - SHUFFLE&lt;/h2&gt;
&lt;h3 id=&#34;le-master-qui-prépare-les-slave-à-la-phase-de-shuffle&#34;&gt;Le MASTER qui prépare les SLAVE à la phase de shuffle.&lt;/h3&gt;
&lt;p&gt;Modifiez le MASTER pour qu&amp;rsquo;il envoie le fichier précédemment créé qui contient la liste des machines que vous voulez utiliser pour votre projet à tous les SLAVES utilisés pour la phase de map. Copiez ce fichier dans la cible suivante pour tous les SLAVES:&lt;/p&gt;
&lt;p&gt;/tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/machines.txt&lt;/p&gt;
&lt;h3 id=&#34;le-slave-qui-prépare-la-phase-de-shuffle&#34;&gt;Le SLAVE qui prépare la phase de shuffle.&lt;/h3&gt;
&lt;p&gt;Modifiez le SLAVE pour qu&amp;rsquo;il prépare la phase de shuffle en regroupant les clés, en calculant le &amp;ldquo;hash&amp;rdquo; pour chacune des clés et en créant un fichier ayant pour nom &amp;lt;hash&amp;gt;-&amp;lt;hostname&amp;gt;.txt dans le dossier shuffles. De la même manière que précédemment, le dossier shuffles doit être créé avant de pouvoir écrire des fichiers dedans. Vous devez attendre que le dossier shuffles soit créé avant de travailler avec. Comment attendez-vous que le dossier shuffles soit bien créé avant de travailler avec?&lt;/p&gt;
&lt;p&gt;Le nom du fichier sera donné comme argument args du main:&lt;br&gt;
public static void main (String[] args)&lt;/p&gt;
&lt;p&gt;Attention: si le fichier &amp;lt;hash&amp;gt;-&amp;lt;hostname&amp;gt;.txt existe déjà, il ne faut pas l&amp;rsquo;écraser mais plutôt continuer d&amp;rsquo;écrire dedans.&lt;/p&gt;
&lt;p&gt;Ce nom de fichier correspond au hash, obtenu grâce à la fonction de hashage de la classe String, explications ici 
&lt;a href=&#34;https://fr.wikipedia.org/wiki/Java_hashCode%28%29#La_fonction_de_hachage_de_la_classe_java.lang.String&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fonction de hachage de la classe java.lang.String&lt;/a&gt; , calculé à partir de la clé; Le nom de la machine, lui, est obtenu grâce à l&amp;rsquo;instruction java suivante: java.net.InetAddress.getLocalHost().getHostName()&lt;/p&gt;
&lt;p&gt;Pour cela, votre SLAVE prend un mode de fonctionnement en argument: 1 , qui correspond au calcul du hash , puis un nom de fichier &amp;ldquo;UMx.txt&amp;rdquo; en entrée depuis le dossier maps et calcule un fichier &amp;ldquo;&amp;lt;hash&amp;gt;-&amp;lt;hostname&amp;gt;.txt &amp;quot; en sortie dans le dossier shuffles. Gardez le mode précédent: 0 pour la phase de map.&lt;/p&gt;
&lt;p&gt;Testez le fonctionnement de votre SLAVE avec le fichier UM1.txt contenant&lt;br&gt;
Car 1&lt;br&gt;
Car 1&lt;br&gt;
River 1&lt;/p&gt;
&lt;p&gt;Testez dans un terminal le JAR comme suit:&lt;/p&gt;
&lt;p&gt;cd /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/&lt;br&gt;
java -jar slave.jar 1 /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/maps/UM1.txt&lt;br&gt;
&lt;br&gt;
Les fichiers suivants doivent être créés:&lt;/p&gt;
&lt;p&gt;/tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/shuffles/67508-c127-12.txt créé contenant&lt;br&gt;
Car 1&lt;br&gt;
Car 1&lt;/p&gt;
&lt;p&gt;/tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/shuffles/78973420-c127-12.txt créé contenant&lt;br&gt;
River 1&lt;/p&gt;
&lt;p&gt;Comme votre SLAVE est modifié, utilisez le DEPLOY pour déployer la nouvelle version.&lt;/p&gt;
&lt;h3 id=&#34;le-slave-qui-exécute-la-phase-de-shuffle&#34;&gt;Le SLAVE qui exécute la phase de shuffle.&lt;/h3&gt;
&lt;p&gt;Modifiez le SLAVE pour qu&amp;rsquo;il exécute la phase de shuffle.&lt;/p&gt;
&lt;p&gt;Pour cela, pour chaque clé calculée lors du map, en plus de créer le fichier dans le dossier shuffles, il faut envoyer ce fichier &lt;strong&gt;dans le dossier shufflesreceived&lt;/strong&gt; d&amp;rsquo;une des machines du fichier&lt;/p&gt;
&lt;p&gt;/tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/machines.txt&lt;/p&gt;
&lt;p&gt;Pour savoir sur quelle machine il faut l&amp;rsquo;envoyer, on utilise le hash calculé à partir de la clé (une valeur entière) et le nombre de machines du fichier. Il suffit de calculer le hash modulo le nombre de machine en considérant que la première machine du fichier a pour numéro 0, la deuxième 1 etc... La formule utilisée pour trouver la machine sur laquelle sera envoyée le shuffle sera donc&lt;/p&gt;
&lt;p&gt;numeroMachine = hash % nbMachines&lt;/p&gt;
&lt;p&gt;De plus, si le dossier shufflesreceived n&amp;rsquo;existe pas sur la machine réceptrice, il faudra le créer, attendre la fin de sa création, puis envoyer les fichiers dans ce dossier.&lt;/p&gt;
&lt;p&gt;Testez le fonctionnement de votre SLAVE avec le fichier UM1.txt contenant&lt;br&gt;
Car 1&lt;br&gt;
Car 1&lt;br&gt;
River 1&lt;/p&gt;
&lt;p&gt;et le fichier machine.txt contenant uniquement TROIS machines (on fera donc un modulo 3)&lt;/p&gt;
&lt;p&gt;Testez dans un terminal le JAR comme suit:&lt;/p&gt;
&lt;p&gt;cd /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/&lt;br&gt;
java -jar slave.jar 1 /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/maps/UM1.txt&lt;br&gt;
&lt;br&gt;
Les fichiers suivants doivent être créés:&lt;/p&gt;
&lt;p&gt;/tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/shuffles/67508-c127-12.txt créé contenant&lt;br&gt;
Car 1&lt;br&gt;
Car 1&lt;/p&gt;
&lt;p&gt;/tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/shuffles/78973420-c127-12.txt créé contenant&lt;br&gt;
River 1&lt;/p&gt;
&lt;p&gt;Normalement, le fichier 67508-c127-12.txt doit être copié dans la machine numéro 2 (67508 modulo 3 = 2) &lt;strong&gt;dans le dossier shufflesreceived&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;et le fichier 78973420-c127-12.txt doit être copié dans la machine numéro 1 (78973420 modulo 3 = 1) &lt;strong&gt;dans le dossier shufflesreceived&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Comme votre SLAVE est modifié, utilisez le DEPLOY pour déployer la nouvelle version.&lt;/p&gt;
&lt;h3 id=&#34;un-master-qui-lance-et-attend-la-fin-de-la-phase-de-shuffle&#34;&gt;Un MASTER qui lance et attend la fin de la phase de shuffle.&lt;/h3&gt;
&lt;p&gt;Modifiez le MASTER pour qu&amp;rsquo;il lance la phase de shuffle une fois que la phase de map est terminée, sur plusieurs machines et affiche &amp;ldquo;SHUFFLE FINISHED&amp;rdquo;. Pour cela vous utiliserez le fichier précédemment créé qui contient la liste des machines que vous voulez utiliser pour votre projet.&lt;/p&gt;
&lt;p&gt;Pour bien synchroniser le MASTER avec les SLAVES, veillez à afficher &amp;ldquo;SHUFFLE FINISHED&amp;rdquo; qu&amp;rsquo;une fois tous les SLAVEs terminés et uniquement quand tous les SLAVEs sont terminés, PAS AVANT! Le MASTER doit donc attendre que SLAVEs se terminent correctement.&lt;/p&gt;
&lt;p&gt;Comment faites-vous pour qu&amp;rsquo;un process lancé avec ProcessBuilder en Java attende la fin de l&amp;rsquo;exécution du processus ?&lt;/p&gt;
&lt;p&gt;Votre programme MASTER lance-t-il les SLAVE de manière séquentielle (les uns après les autres) ou de manière parallèle?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Etape 12</title>
      <link>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape12/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape12/</guid>
      <description>&lt;h2 id=&#34;mapreduce---reduce&#34;&gt;MapReduce - REDUCE&lt;/h2&gt;
&lt;h3 id=&#34;le-slave-qui-exécute-la-phase-de-reduce&#34;&gt;Le SLAVE qui exécute la phase de reduce.&lt;/h3&gt;
&lt;p&gt;Modifiez le SLAVE pour qu&amp;rsquo;il prépare la phase de reduce en regroupant les fichiers avec le même hash, en calculant le reduce pour chacune des clés et en créant un fichier ayant pour nom &amp;lt;hash&amp;gt;.txt dans le dossier reduces. De la même manière que précédemment, le dossier reduces doit être créé avant de pouvoir écrire des fichiers dedans.&lt;/p&gt;
&lt;p&gt;Pour cela, votre SLAVE prend un mode de fonctionnement en argument: 2 , qui correspond au calcul du reduce. Gardez les modes précédents: 0 pour la phase de map, 1 pour la phase de shuffle.&lt;/p&gt;
&lt;p&gt;Testez le fonctionnement de votre SLAVE avec les fichiers suivants &lt;u&gt;DANS LE DOSSIER SHUFFLERECEIVED&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;/tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/shufflesreceived/67508-cxxx-12.txt contenant&lt;br&gt;
Car 1&lt;/p&gt;
&lt;p&gt;Car 1&lt;/p&gt;
&lt;p&gt;/tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/shufflesreceived/67508-cxxx-13.txt contenant&lt;br&gt;
Car 1&lt;/p&gt;
&lt;p&gt;/tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/shufflesreceived/78973420-cxxx-12.txt contenant&lt;br&gt;
River 1&lt;/p&gt;
&lt;p&gt;Testez dans un terminal le JAR comme suit:&lt;/p&gt;
&lt;p&gt;cd /tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/&lt;br&gt;
java -jar slave.jar 2&lt;/p&gt;
&lt;p&gt;Le dossier reduces doit contenir les fichiers suivants:&lt;/p&gt;
&lt;p&gt;/tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/reduces/67508.txt contenant&lt;br&gt;
Car 3&lt;/p&gt;
&lt;p&gt;/tmp/&amp;lt;votre nom d&amp;rsquo;utilisateur&amp;gt;/reduces/78973420.txt contenant&lt;br&gt;
River 1&lt;/p&gt;
&lt;p&gt;Comme votre SLAVE est modifié, utilisez le DEPLOY pour déployer la nouvelle version.&lt;/p&gt;
&lt;h3 id=&#34;un-master-qui-lance-et-attend-la-fin-de-la-phase-de-reduce-&#34;&gt;Un MASTER qui lance et attend la fin de la phase de reduce .&lt;/h3&gt;
&lt;p&gt;Modifiez le MASTER pour qu&amp;rsquo;il lance la phase de reduce une fois que la phase de shuffle est terminée, sur plusieurs machines et affiche &amp;ldquo;REDUCE FINISHED&amp;rdquo;. Pour cela vous utiliserez le fichier précédemment créé qui contient la liste des machines que vous voulez utiliser pour votre projet.&lt;/p&gt;
&lt;p&gt;Pour bien synchroniser le MASTER avec les SLAVES, veillez à afficher &amp;ldquo;REDUCE FINISHED&amp;rdquo; qu&amp;rsquo;une fois tous les SLAVEs terminés et uniquement quand tous les SLAVEs sont terminés, PAS AVANT! Le MASTER doit donc attendre que SLAVEs se terminent correctement.&lt;/p&gt;
&lt;h3 id=&#34;un-master-qui-chronomètre-les-phases&#34;&gt;Un MASTER qui chronomètre les phases.&lt;/h3&gt;
&lt;p&gt;Modifiez le MASTER pour qu&amp;rsquo;il chronomètre les différentes phases MAP, SHUFFLE, REDUCE et pour qu&amp;rsquo;il affiche le temps de chacune des phases.&lt;/p&gt;
&lt;p&gt;Testez sur l&amp;rsquo;exemple de départ avec les trois splits suivants:&lt;/p&gt;
&lt;p&gt;S0.txt S1.txt S2.txt.&lt;br&gt;
S0.txt contient:&lt;/p&gt;
&lt;p&gt;Deer Beer River&lt;/p&gt;
&lt;p&gt;S1.txt contient:&lt;/p&gt;
&lt;p&gt;Car Car River&lt;/p&gt;
&lt;p&gt;S2.txt contient:&lt;/p&gt;
&lt;p&gt;Deer Car Beer&lt;/p&gt;
&lt;p&gt;Quelle est la phase qui prend le plus de temps ? Quelle est la phase la plus rapide ?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Etape 13</title>
      <link>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape13/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://remisharrock.fr/courses/simple-hadoop-mapreduce-from-scratch/etape13/</guid>
      <description>&lt;h2 id=&#34;mapreduce---finalisations-et-optimisations&#34;&gt;MapReduce - finalisations et optimisations&lt;/h2&gt;
&lt;h3 id=&#34;un-master-qui-affiche-le-résultat-à-partir-dun-fichier-inputtxt&#34;&gt;Un MASTER qui affiche le résultat à partir d&amp;rsquo;un fichier input.txt&lt;/h3&gt;
&lt;p&gt;Modifiez le MASTER pour qu&amp;rsquo;il crée les splits et les déploies sur plusieurs machines à partir d&amp;rsquo;un fichier input.txt et affiche le résultat final (la combinaison des résultats dans les dossiers reduces des différentes machines).&lt;/p&gt;
&lt;h3 id=&#34;un-projet-hadoop-mapreduce-complet-utilisable-en-environnement-bigdata&#34;&gt;Un projet Hadoop-Mapreduce complet, utilisable en environnement &amp;ldquo;BigData&amp;rdquo;&lt;/h3&gt;
&lt;p&gt;Copiez votre projet tel qu&amp;rsquo;il est à la question précédente. Ceci vous permet de garder une version de votre projet qui fonctionne avec l&amp;rsquo;exemple de démo tel que décrit lors des questions précédentes (petit fichier input.txt de démo avec 3 lignes).&lt;/p&gt;
&lt;p&gt;Améliorez la copie de votre projet pour qu&amp;rsquo;il fonctionne avec des plus gros fichiers en input.&lt;/p&gt;
&lt;h3 id=&#34;une-prise-en-compte-des-pannes&#34;&gt;Une prise en compte des pannes&lt;/h3&gt;
&lt;p&gt;De la même manière que précédemment, créez une copie de votre projet sur laquelle vous travaillez sur la robustesse: faites en sorte que votre programme fonctionne malgré des pannes inopinées de certaines machines. Pour tester, vous pouvez éteindre une ou plusieurs machines au milieu de calculs. Vous pouvez inventer d&amp;rsquo;autres pannes vous-même et présenter vos résultats. Comparez avec la méthode de robustesse utilisée par Google : &lt;a href=&#34;https://research.google.com/archive/mapreduce-osdi04.pdf&#34;&gt;https://research.google.com/archive/mapreduce-osdi04.pdf&lt;/a&gt; &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Codecast</title>
      <link>https://remisharrock.fr/project/codecast/</link>
      <pubDate>Tue, 28 Apr 2020 16:50:34 +0200</pubDate>
      <guid>https://remisharrock.fr/project/codecast/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#3-innovative-tools-implemented-in-moocs-to-enhance-teaching-and-learning-of-c-programming-with-linux&#34;&gt;3 innovative tools implemented in MOOCs to enhance teaching and learning of C programming with Linux:&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#codecast&#34;&gt;Codecast&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#taskgrader&#34;&gt;Taskgrader&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#weblinux&#34;&gt;WebLinux&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#some-of-my-use-cases&#34;&gt;Some of my use cases&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#demos-in-conferences&#34;&gt;Demos in conferences&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#project-contributors&#34;&gt;Project contributors&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#project-made-by&#34;&gt;Project made by&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#with-the-support-of&#34;&gt;With the support of&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;h1 id=&#34;how-to-make-early-beginners-learning-programming-easier&#34;&gt;How to make early beginners learning programming easier?&lt;/h1&gt;
&lt;p&gt;The goal for our international team is to enhance learning with in-browser open-source coding tools, providing easy onboarding and a rich learning experience for learners. Using a variety of tools, we aim to facilitate active learning style computer science teaching and learning. We began with the assumption that it is impossible to learn how to program with multiple choice assessments. Thus, we designed tools and assessments that allow students to learn by programming, via interactive and intuitive tools.&lt;/p&gt;
&lt;h2 id=&#34;3-innovative-tools-implemented-in-moocs-to-enhance-teaching-and-learning-of-c-programming-with-linux&#34;&gt;3 innovative tools implemented in MOOCs to enhance teaching and learning of C programming with Linux:&lt;/h2&gt;
&lt;h3 id=&#34;codecast&#34;&gt;Codecast&lt;/h3&gt;
&lt;p&gt;How to overcome the barrier that a programming screencast video tutorial is not interactive? How to better teach and explain to learners basics of computer programming such as pointers, memory allocation or matrices in an online environment at large scale?&lt;/p&gt;
&lt;p&gt;Any CS educator has to explain sooner or later a portion of code or a structured text to learners. The Codecast tool has been specially designed by CS educators and developed for MOOCs to replace non-interactive screencasts.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codecast.wp.imt.fr/files/2017/04/cropped-cropped-codecast9-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;taskgrader&#34;&gt;Taskgrader&lt;/h3&gt;
&lt;p&gt;Taskgrader is an automated grader to assess code submissions at scale, providing customized feedback, embedded in the platform with LTI. In these courses, we developed tasks within the Taskgrader platform to provide hands-on coding challenges in which learners apply knowledge presented in the codecasts by the instructor. The learner writes and submits a program and then receives detailed feedback and a score within seconds. To promote mastery learning, students can request hints and receive unlimited attempts. Learners can edit and resubmit until they complete the task. This setup is made to support motivation and learner engagement.&lt;/p&gt;
&lt;h3 id=&#34;weblinux&#34;&gt;WebLinux&lt;/h3&gt;
&lt;p&gt;Teaching Linux in an online environment brings challenges. One of them is to provide a easy onboarding experience for learners. How to make Linux available easily to users who might not be able to download large files on their own device or be skilled enough to install a Linux OS on their own device? The Weblinux tool provides a Linux OS fully in the browser and solves the inconvenient problem  of having to install an ISO disc image or provide access to a virtual machine.&lt;/p&gt;
&lt;h2 id=&#34;some-of-my-use-cases&#34;&gt;Some of my use cases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.imt.fr/en/education/mooc/mooc-thematic-courses/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2 MOOC offered on FUN-MOOC, French national Open edX instance.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.edx.org/professional-certificate/dartmouth-imtx-c-programming-with-linux&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;7 MOOC offered on edX.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;demos-in-conferences&#34;&gt;Demos in conferences&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3053970&amp;amp;CFID=749625375&amp;amp;CFTOKEN=11921258&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Demo paper presented at the Learning@Scale conference&lt;/a&gt;,
Forth annual SCM Conference, April 2017, MIT, Cambridge.  // 
&lt;a href=&#34;https://codecast.wp.imt.fr/files/2017/04/Poster-LAS-IMT-HAMONIC-SHARROCK3.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Poster presentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://dl.acm.org/citation.cfm?doid=3159450.3162381&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Workshop organized at the SIGCSE &amp;lsquo;18 conference, 49th ACM Technical Symposium on Computer Science Education, February 2018, Baltimore.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Demo presentation at the OpenedX Conference, May 2018, UMontreal.&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://dl.acm.org/citation.cfm?doid=3231644.3231703&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Demo paper presented at Learning@Scale conference, Fifth Annual ACM Conference on Learning at Scale, June 2018,    London &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;project-contributors&#34;&gt;Project contributors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://remisharrock.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rémi Sharrock (Télécom ParisTech)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.linkedin.com/in/mathias-hiron-92a4303/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mathias Hiron (France IOI)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sébastien Carlier (Epixode)&lt;/li&gt;
&lt;li&gt;Michel Blockelet (France ioi)&lt;/li&gt;
&lt;li&gt;Elie Roux (France ioi)&lt;/li&gt;
&lt;li&gt;Lawrence Angrave (University of Illinois at Urbana-Champaign)&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.linkedin.com/in/ellahamonic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ella Hamonic&lt;/a&gt; (Independent researcher)&lt;/li&gt;
&lt;li&gt;Baptiste Gaultier (IMT Atlantique)&lt;/li&gt;
&lt;li&gt;Petra Bonfert-Taylor (Dartmouth College)&lt;/li&gt;
&lt;li&gt;Michael Goudzwaard (Dartmouth College)&lt;/li&gt;
&lt;li&gt;Chris Miller (Dartmouth College)&lt;/li&gt;
&lt;li&gt;Gérard Memmi (Télécom ParisTech)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;project-made-by&#34;&gt;Project made by&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.imt.fr/en/training/mooc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://codecast.wp.imt.fr/files/2017/04/IMT_logo_RVB-1-300x157.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;

&lt;a href=&#34;http://www.telecom-paristech.fr/eng&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://codecast.wp.imt.fr/files/2017/04/logotelecom_0-300x300.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;

&lt;a href=&#34;http://www.france-ioi.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://codecast.wp.imt.fr/files/2017/04/France-ioi-LogoOK-grand-300x167.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;with-the-support-of&#34;&gt;With the support of&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://codecast.wp.imt.fr/files/2017/04/fd-300x240.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Search and replace using regex in Visual Studio Code</title>
      <link>https://remisharrock.fr/post/regex-search-and-replace-visual-studio-code/</link>
      <pubDate>Tue, 28 Apr 2020 01:22:51 +0200</pubDate>
      <guid>https://remisharrock.fr/post/regex-search-and-replace-visual-studio-code/</guid>
      <description>&lt;p&gt;Sometimes I convert HTML pages extracted from websites to Markdown using 
&lt;a href=&#34;https://pandoc.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pandoc&lt;/a&gt;. Here is an example using this command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pandoc -s -r html https://codecast.wp.imt.fr/ -o codecast.md
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The problem is that it often generates extra information following the pattern&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[interesting text that
I want
to keep]{uninteresting parameters extracted from HTML that I want to delete}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Any CS educator has to explain sooner or later a portion of code or a
structured text to learners. The Codecast tool has been specially
designed by CS educators and developed for MOOCs to replace
non-interactive screencasts.]{style=&amp;quot;font-weight: 400&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I found an easy way to clean the Markdown using Visual Studio Code &amp;ldquo;find and replace&amp;rdquo; feature with regex. Here is the regular expression that I used:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;^\[([\s\S\r]*?)\]\{.*\} 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;^&lt;/code&gt; means beginning of a line. If you want to find this pattern in the middle of lines, just delete it.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;\[       \]&lt;/code&gt; means that I want to search something between squared brackets.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;[\s\S\r]&lt;/code&gt; means a &lt;em&gt;whitespace&lt;/em&gt; character &lt;code&gt;\s&lt;/code&gt; (space, tab&amp;hellip;) OR a character that is &lt;em&gt;not a whitespace&lt;/em&gt; &lt;code&gt;\S&lt;/code&gt; (a,b,c&amp;hellip;) OR a new line character &lt;code&gt;\r&lt;/code&gt;. Note that in Visual Studio Code regex system, the &lt;code&gt;\s&lt;/code&gt; does &lt;strong&gt;NOT&lt;/strong&gt; include the new line (even if I would think it&amp;rsquo;s a &lt;em&gt;whitespace&lt;/em&gt; character), that&amp;rsquo;s why I specifically add the &lt;code&gt;\r&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;(x*?)&lt;/code&gt;  - here &lt;code&gt;x&lt;/code&gt; is the expression just above - asks to capture a group using &lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; , with the character &lt;code&gt;x&lt;/code&gt; appearing zero or more times with &lt;code&gt;*&lt;/code&gt; and once or none with &lt;code&gt;?&lt;/code&gt;. Maybe you are lost at this point! Anyway, because we asked for a capture, we will be able to use &lt;code&gt;$1&lt;/code&gt; as a variable containing the captured text!&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;\{.*\}&lt;/code&gt; means curly braces with something inside - Here I could also use  &lt;code&gt;[\s\S\r]&lt;/code&gt; instead of  &lt;code&gt;.*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Anyway, I then replace with &lt;code&gt;$1&lt;/code&gt; and here is the result:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./giftest.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Starting My (New) Academic Page</title>
      <link>https://remisharrock.fr/post/starting-my-academic-page/</link>
      <pubDate>Sun, 26 Apr 2020 23:48:41 +0200</pubDate>
      <guid>https://remisharrock.fr/post/starting-my-academic-page/</guid>
      <description>&lt;p&gt;So here is my first blog post switching from an old static website generator to a new one called 
&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; and a theme called 
&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;academic&lt;/a&gt;. I stated creating static sites in 2015 with a generator integrated to GitHub called 
&lt;a href=&#34;https://jekyllrb.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jekyll&lt;/a&gt; and hosted (for free) using 
&lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github pages&lt;/a&gt;. For the techies, you can see the move happened with 
&lt;a href=&#34;https://github.com/remisharrock/remisharrock.github.io/commit/97acdd0eebb72325baca5ad5123df35d6170097c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this very commit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I think my old website will still be accessible in the future using the 
&lt;a href=&#34;http://web.archive.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wayback machine&lt;/a&gt; to get some details on how it was previously built, maybe you can check (beware: as soon as you click the link, you will be travelling back in time!) by 
&lt;a href=&#34;https://web.archive.org/web/20160409092644/http://www.remisharrock.fr/about/website/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;clicking here&lt;/a&gt;. For those of you who are afraid to click, and that is understandable (you wouldn&amp;rsquo;t want to be lost in a parallel universe would you), you will notice a slight difference in the URL of the website. Indeed, I used HTTP and not HTTPS, remember that the S stands for Secured, what a crazy idea! As google wrote in a 
&lt;a href=&#34;https://security.googleblog.com/2018/02/a-secure-web-is-here-to-stay.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;post&lt;/a&gt; back in 2018:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For the past several years, we’ve moved toward a more secure web by strongly advocating that sites adopt HTTPS encryption. And within the last year, we’ve also helped users understand that HTTP sites are not secure by gradually marking a larger subset of HTTP pages as “not secure”. Beginning in July 2018 with the release of Chrome 68, Chrome will mark all HTTP sites as “not secure”.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Of course Google was right and I was surprised to discover that sites load slower using HTTP rather than HTTPS, even if you think the added encryption mechanism would slower things down: isn&amp;rsquo;t that counterintuitive ? Take a look 
&lt;a href=&#34;https://scotthelme.co.uk/still-think-you-dont-need-https/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; to understand.&lt;/p&gt;
&lt;p&gt;Looking back at my &amp;ldquo;behind the scenes of this website&amp;rdquo; I also mentioned 
&lt;a href=&#34;atom.io&#34;&gt;ATOM&lt;/a&gt; to be my source code editor, which is not the case anymore. I switched to 
&lt;a href=&#34;https://code.visualstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Visual Studio Code&lt;/a&gt; and I&amp;rsquo;m very happy with it. Anyway the funny ATOM launching 
&lt;a href=&#34;https://www.youtube.com/watch?v=Y7aEiVwBAdk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;video&lt;/a&gt; is still on YouTube and I still like it a lot, especially when grandma switches the colors to black and green 👵 💻! No comparable video for Visual Studio Code 😏.&lt;/p&gt;
&lt;p&gt;For the rest, I still use GitHub pages and I&amp;rsquo;ll explore more differences in a new post one day!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
